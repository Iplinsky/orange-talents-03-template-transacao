# Datasource
spring.datasource.url=jdbc:mariadb://localhost:3306/db_proposta?createDatabaseIfNotExist=true       
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=create-drop

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDB103Dialect

# Endereco do Kafka
spring.kafka.bootstrap-servers=localhost:9092

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:transaction}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

#Kafka topic
spring.kafka.topic.transactions=transacoes

#Feign
url.sistema.bancario=${URL_SISTEMA_BANCARIO:http://localhost:7777/api/cartoes}

# Spring Security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transacao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transacao/protocol/openid-connect/certs}

# Log Spring Security
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.org.keycloak = DEBUG